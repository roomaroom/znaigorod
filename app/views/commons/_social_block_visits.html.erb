<ul class='avatars'>
  <% @visits.each do |visit| %>
    <li>
      <%= render :partial => 'accounts/avatar',
        :locals => { :account => visit.user.account, :width => 35, :height => 35, :title => visit.user.account } %>

      <div class="details">
        <%= link_to(visit.user.account, visit.user.account, :class => :name, rel: 'nofollow') %>
        <div class="wanted">
          <div class="info">
            <% visit.user.account.invitations.without_invited.where(:inviteable_id => visit.visitable_id, :inviteable_type => visit.visitable_type).each do |invitation| %>
              <div>
                <% if user_signed_in? && invitation.account == current_user.account %>
                  <span><%= invitation.kind_text %> <%= t("enumerize.invitation.gender.custom.#{invitation.kind}.#{invitation.gender}").mb_chars.downcase %></span>
                  <% if invitation.description? %>
                    <abbr title="<%= invitation.description %>" class="show_tipsy"><%= image_tag 'public/icon_question.png' %></abbr>
                  <% end %>
                <% elsif visit.actual? %>
                  <span><%= t("account_acts_as.#{invitation.kind}") %> <%= t("enumerize.invitation.gender.custom.#{invitation.kind}.#{invitation.gender}").mb_chars.downcase %></span>

                  <% if invitation.description? %>
                    <abbr title="<%= invitation.description %>" class="show_tipsy"><%= image_tag 'public/icon_question.png' %></abbr>
                  <% end %>

                  <% if user_signed_in? %>
                    <%= simple_form_for [invitation.inviteable, invitation.inviteable.invitations.new], :remote => true do |f| %>
                      <%= hidden_field_tag :render, 'status' %>
                      <%= f.input :kind, :as => :hidden, :input_html => { :value => invitation.opposite_kind } %>
                      <%= f.input :invited_id, :as => :hidden, :input_html => { :value => visit.user.account.id } %>
                      <%= f.submit t("invite.#{invitation.opposite_kind}"),
                      :class => 'submit_dialog',
                        :onClick => 'share_on_click(this);',
                        'data-owner_id' => (visit.user.account.users.first.try(:vk_uid) if current_user.provider == 'vkontakte'),
                        'data-message' => "#{I18n.t("invitation.#{invitation.opposite_kind}.#{invitation.inviteable.class.name.underscore}")} \"#{invitation.inviteable}\"",
                        'data-attachments' => data_attachments(invitation.inviteable) %>
                    <% end %>
                  <% else %>
                    <%= simple_form_for [invitation.inviteable, invitation.inviteable.invitations.new], :remote => true do |f| %>
                      <%= hidden_field_tag :render, 'status' %>
                      <%= f.input :kind, :as => :hidden, :input_html => { :value => invitation.opposite_kind } %>
                      <%= f.input :invited_id, :as => :hidden, :input_html => { :value => visit.user.account.id } %>
                      <%= f.submit t("invite.#{invitation.opposite_kind}"), :class => 'submit_dialog' %>
                    <% end %>
                  <% end %>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </li>
  <% end %>
</ul>

<% unless @visits.first_page? && @visits.last_page? %>
  <div class="pagination">
    <%= link_to '&uarr;'.html_safe, '#', :class => "toggler #{ 'disabled' if @visits.first_page? }" %>
    <%= link_to '&darr;'.html_safe, polymorphic_path([@afisha || @organization, :visits], :page => @visits.current_page + 1), :class => "next_page #{ 'disabled' if @visits.last_page? }" %>
  </div>
<% end %>
