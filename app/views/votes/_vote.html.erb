<% object_assoc_chain = voteable.is_a?(Work) ? [voteable.context, voteable.becomes(Work)] : [voteable] %>

<div class="like_wrapper">
  <div class="like_box">
    <div>
      <%= t :like, :count => voteable.votes.liked.count %>
    </div>
    <% voteable.votes.with_user.liked.order('updated_at desc').last(6).map(&:user).each do |user| %>
      <%= link_to account_path(user.account) do %>
        <%= image_tag(resized_image_url(user.account.avatar.url, 24, 24), size: '24x24', title: user.name, alt: user.name) %>
      <% end %>
    <% end %>
  </div>
  <div class='votes_counter' title='<%= t :like, :count => voteable.votes.liked.count %>'>
    <%= voteable.votes.liked.count %>
  </div>

  <% if !voteable.is_a?(Comment) || current_user != voteable.user %>
    <% if voteable.is_a?(Question) %>
      <%= render :partial => 'votes/question_vote', :locals => { :voteable => voteable, :object_assoc_chain => object_assoc_chain } %>
    <% elsif voteable.is_a?(Review) %>
      <%= render :partial => 'votes/review_vote', :locals => { :voteable => voteable, :object_assoc_chain => object_assoc_chain } %>
    <% else %>
      <div class="user_like <%= (current_user && current_user.liked?(voteable))? 'liked' : 'dont_liked' %>">
        <%= link_to 'Мне нравится',
          polymorphic_url([object_assoc_chain, :change_vote].flatten),
          :method => :put,
          :remote => true,
          :class => "vote_#{voteable.id} change_vote" %>
      </div>
    <% end %>
  <% end %>
</div>

<% if @vote && @vote.errors.any? %>
  <div class="new_session">
    <h4>Оценивать могут только зарегистрированные пользователи.</h4>
    <%= render :partial => 'commons/social_auth' %>
  </div>
<% end %>
